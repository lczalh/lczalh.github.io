<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>lczalh</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2019-07-02T07:34:53.952Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>Liu Chao Zheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iOS开发 SkeletonView</title>
    <link href="http://yoursite.com/2019/06/17/2019-7-02%20SkeletonView/"/>
    <id>http://yoursite.com/2019/06/17/2019-7-02 SkeletonView/</id>
    <published>2019-06-17T06:12:42.000Z</published>
    <updated>2019-07-02T07:34:53.952Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/Juanpe/SkeletonView" title="SkeletonView" target="_blank" rel="noopener">SkeletonView</a>一种优雅的方式，向用户显示正在发生的事情，并为他们正在等待的内容做好准备</p><h2 id="1-安装"><a href="#1-安装" class="headerlink" title="1.安装"></a>1.安装</h2><p><code>pod &quot;SkeletonView&quot;</code></p><h2 id="2-如何使用"><a href="#2-如何使用" class="headerlink" title="2.如何使用"></a>2.如何使用</h2><h3 id="2-1在适当的位置导入SkeletonView"><a href="#2-1在适当的位置导入SkeletonView" class="headerlink" title="2.1在适当的位置导入SkeletonView"></a>2.1在适当的位置导入SkeletonView</h3><p><code>import SkeletonView</code></p><h3 id="2-2设置视图skeletonables"><a href="#2-2设置视图skeletonables" class="headerlink" title="2.2设置视图skeletonables"></a>2.2设置视图skeletonables</h3><p><code>avatarImageView.isSkeletonable = true</code></p><h3 id="2-3显示骨架"><a href="#2-3显示骨架" class="headerlink" title="2.3显示骨架"></a>2.3显示骨架</h3><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">view</span>.showSkeleton()                 <span class="comment">// Solid</span></span><br><span class="line"><span class="keyword">view</span>.showGradientSkeleton()         <span class="comment">// Gradient</span></span><br><span class="line"><span class="keyword">view</span>.showAnimatedSkeleton()         <span class="comment">// Solid animated</span></span><br><span class="line"><span class="keyword">view</span>.showAnimatedGradientSkeleton() <span class="comment">// Gradient animated</span></span><br></pre></td></tr></table></figure><h3 id="2-4更新骨架（如颜色，动画等）"><a href="#2-4更新骨架（如颜色，动画等）" class="headerlink" title="2.4更新骨架（如颜色，动画等）"></a>2.4更新骨架（如颜色，动画等）</h3><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">view</span>.updateSkeleton()                 <span class="comment">// Solid</span></span><br><span class="line"><span class="keyword">view</span>.updateGradientSkeleton()         <span class="comment">// Gradient</span></span><br><span class="line"><span class="keyword">view</span>.updateAnimatedSkeleton()         <span class="comment">// Solid animated</span></span><br><span class="line"><span class="keyword">view</span>.updateAnimatedGradientSkeleton() <span class="comment">// Gradient animated</span></span><br></pre></td></tr></table></figure><h3 id="2-5隐藏骨架"><a href="#2-5隐藏骨架" class="headerlink" title="2.5隐藏骨架"></a>2.5隐藏骨架</h3><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">view</span>.hideSkeleton()</span><br></pre></td></tr></table></figure><h2 id="3-UITableView"><a href="#3-UITableView" class="headerlink" title="3.UITableView"></a>3.UITableView</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/SkeletonView/tableView.jpg?raw=true" alt="markdown" title="UITableView"></p><h3 id="3-1遵守SkeletonTableViewDataSource协议，并实现协议方法"><a href="#3-1遵守SkeletonTableViewDataSource协议，并实现协议方法" class="headerlink" title="3.1遵守SkeletonTableViewDataSource协议，并实现协议方法"></a>3.1遵守<code>SkeletonTableViewDataSource</code>协议，并实现协议方法</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">SearchMovieViewController</span>: <span class="title">SkeletonTableViewDataSource</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, numberOfRowsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">self</span>.models.<span class="built_in">count</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">tableView</span><span class="params">(<span class="number">_</span> tableView: UITableView, cellForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UITableViewCell</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> model = <span class="keyword">self</span>.models[indexPath.row]</span><br><span class="line">        <span class="keyword">let</span> cell = tableView.dequeueReusableCell(withIdentifier: <span class="string">"SearchMovieCell"</span>, <span class="keyword">for</span>: indexPath) <span class="keyword">as</span>! <span class="type">SearchMovieCell</span></span><br><span class="line">        <span class="keyword">if</span> model.vod_pic?.isEmpty == <span class="literal">false</span> &#123;</span><br><span class="line">            cell.movieImageView.kf.indicatorType = .activity</span><br><span class="line">            cell.movieImageView.kf.setImage(with: <span class="type">ImageResource</span>(downloadURL: <span class="type">URL</span>(string: model.vod_pic!)!), placeholder: <span class="type">UIImage</span>(named: <span class="string">"zanwutupian"</span>))</span><br><span class="line">        &#125;</span><br><span class="line">        cell.titleLabel.text = model.vod_name</span><br><span class="line">        cell.detailsLabel.text = model.vod_blurb</span><br><span class="line">        <span class="keyword">return</span> cell</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">collectionSkeletonView</span><span class="params">(<span class="number">_</span> skeletonView: UITableView, cellIdentifierForRowAt indexPath: IndexPath)</span></span> -&gt; <span class="type">ReusableCellIdentifier</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"SearchMovieCell"</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-2-设置视图skeletonables"><a href="#3-2-设置视图skeletonables" class="headerlink" title="3.2 设置视图skeletonables"></a>3.2 设置视图skeletonables</h3><figure class="highlight roboconf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line">class SearchMovieCell: DiaryBaseTableViewCell &#123;</span><br><span class="line"></span><br><span class="line">/// 图片</span><br><span class="line"><span class="attribute">var movieImageView</span>: UIImageView!</span><br><span class="line"></span><br><span class="line">/// 标题</span><br><span class="line">var titleLabel: UILabel!</span><br><span class="line"></span><br><span class="line">/// 详情</span><br><span class="line">var detailsLabel: LCZAlignTopLabel!</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">override func config() &#123;</span><br><span class="line">    self<span class="variable">.isSkeletonable</span> = true</span><br><span class="line">    movieImageView = UIImageView()</span><br><span class="line">    self<span class="variable">.contentView</span><span class="variable">.addSubview</span>(movieImageView)</span><br><span class="line">    movieImageView<span class="variable">.snp</span><span class="variable">.makeConstraints</span> &#123; (make) in</span><br><span class="line">        make<span class="variable">.left</span><span class="variable">.equalToSuperview</span>()<span class="variable">.offset</span>(15)</span><br><span class="line">        make<span class="variable">.centerY</span><span class="variable">.equalToSuperview</span>()</span><br><span class="line">        make<span class="variable">.height</span><span class="variable">.equalTo</span>(100)</span><br><span class="line">        make<span class="variable">.width</span><span class="variable">.equalTo</span>(80)</span><br><span class="line">    &#125;</span><br><span class="line">    movieImageView<span class="variable">.layer</span><span class="variable">.cornerRadius</span> = 5</span><br><span class="line">    movieImageView<span class="variable">.clipsToBounds</span> = true</span><br><span class="line">    movieImageView<span class="variable">.contentMode</span> = <span class="variable">.scaleAspectFill</span></span><br><span class="line">    movieImageView<span class="variable">.setContentHuggingPriority</span>(<span class="variable">.required</span>, for: <span class="variable">.horizontal</span>)</span><br><span class="line">    movieImageView<span class="variable">.setContentCompressionResistancePriority</span>(<span class="variable">.required</span>, for: <span class="variable">.horizontal</span>)</span><br><span class="line">    movieImageView<span class="variable">.isSkeletonable</span> = true</span><br><span class="line"></span><br><span class="line">    titleLabel = UILabel()</span><br><span class="line">    self<span class="variable">.contentView</span><span class="variable">.addSubview</span>(titleLabel)</span><br><span class="line">    titleLabel<span class="variable">.snp</span><span class="variable">.makeConstraints</span> &#123; (make) in</span><br><span class="line">        make<span class="variable">.left</span><span class="variable">.equalTo</span>(movieImageView<span class="variable">.snp</span><span class="variable">.right</span>)<span class="variable">.offset</span>(5)</span><br><span class="line">        make<span class="variable">.top</span><span class="variable">.equalTo</span>(movieImageView<span class="variable">.snp</span><span class="variable">.top</span>)</span><br><span class="line">        make<span class="variable">.right</span><span class="variable">.equalToSuperview</span>()<span class="variable">.offset</span>(-15)</span><br><span class="line">    &#125;</span><br><span class="line">    titleLabel<span class="variable">.font</span> = LCZBoldFontSize(size: 16)</span><br><span class="line">    titleLabel<span class="variable">.setContentHuggingPriority</span>(<span class="variable">.required</span>, for: <span class="variable">.vertical</span>)</span><br><span class="line">    titleLabel<span class="variable">.setContentCompressionResistancePriority</span>(<span class="variable">.required</span>, for: <span class="variable">.vertical</span>)</span><br><span class="line">    titleLabel<span class="variable">.text</span> = "xxxxxxxxx"</span><br><span class="line">    titleLabel<span class="variable">.isSkeletonable</span> = true</span><br><span class="line">    titleLabel<span class="variable">.textAlignment</span> = <span class="variable">.left</span></span><br><span class="line"></span><br><span class="line">    detailsLabel = LCZAlignTopLabel()</span><br><span class="line">    self<span class="variable">.contentView</span><span class="variable">.addSubview</span>(detailsLabel)</span><br><span class="line">    detailsLabel<span class="variable">.snp</span><span class="variable">.makeConstraints</span> &#123; (make) in</span><br><span class="line">        make<span class="variable">.left</span><span class="variable">.equalTo</span>(movieImageView<span class="variable">.snp</span><span class="variable">.right</span>)<span class="variable">.offset</span>(5)</span><br><span class="line">        make<span class="variable">.top</span><span class="variable">.equalTo</span>(titleLabel<span class="variable">.snp</span><span class="variable">.bottom</span>)<span class="variable">.offset</span>(5)</span><br><span class="line">        make<span class="variable">.right</span><span class="variable">.equalToSuperview</span>()<span class="variable">.offset</span>(-15)</span><br><span class="line">        make<span class="variable">.bottom</span><span class="variable">.equalTo</span>(movieImageView<span class="variable">.snp</span><span class="variable">.bottom</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    detailsLabel<span class="variable">.font</span> = LCZFontSize(size: 14)</span><br><span class="line">    detailsLabel<span class="variable">.numberOfLines</span> = 0;</span><br><span class="line">    <span class="attribute">detailsLabel.textColor = LCZRgbColor(160, 160, 160, 1)</span></span><br><span class="line"><span class="attribute">    detailsLabel.isSkeletonable = true</span></span><br><span class="line"><span class="attribute">    detailsLabel.textAlignment = .left</span></span><br><span class="line"><span class="attribute">    &#125;</span></span><br><span class="line"><span class="attribute"></span></span><br><span class="line"><span class="attribute">&#125;</span></span><br></pre></td></tr></table></figure><h3 id="3-3-显示骨架"><a href="#3-3-显示骨架" class="headerlink" title="3.3 显示骨架"></a>3.3 显示骨架</h3><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="literal">self</span>.searchMovieView.<span class="built_in">table</span>View.visibleCells.<span class="keyword">for</span>Each &#123; <span class="variable">$0</span>.showAnimatedGradientSkeleton(usingGradient: SkeletonGradient(baseColor: UIColor.clouds),animation: GradientDirection.topLeftBottomRight.slidingAnimation()) &#125;</span><br></pre></td></tr></table></figure><h2 id="4-UICollectionView"><a href="#4-UICollectionView" class="headerlink" title="4.UICollectionView"></a>4.UICollectionView</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/SkeletonView/collectionView.jpg?raw=true" alt="markdown" title="UICollectionView"></p><h3 id="4-1-遵守SkeletonCollectionViewDataSource协议，并实现协议方法"><a href="#4-1-遵守SkeletonCollectionViewDataSource协议，并实现协议方法" class="headerlink" title="4.1 遵守SkeletonCollectionViewDataSource协议，并实现协议方法"></a>4.1 遵守<code>SkeletonCollectionViewDataSource</code>协议，并实现协议方法</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">collectionSkeletonView</span><span class="params">(<span class="number">_</span> skeletonView: UICollectionView, cellIdentifierForItemAt indexPath: IndexPath)</span></span> -&gt; <span class="type">ReusableCellIdentifier</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"MovieHomeCell"</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">collectionView</span><span class="params">(<span class="number">_</span> collectionView: UICollectionView, cellForItemAt indexPath: IndexPath)</span></span> -&gt; <span class="type">UICollectionViewCell</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> cell = collectionView.dequeueReusableCell(withReuseIdentifier: <span class="string">"MovieHomeCell"</span>, <span class="keyword">for</span>: indexPath) <span class="keyword">as</span>! <span class="type">MovieHomeCell</span></span><br><span class="line">    <span class="keyword">let</span> model = <span class="keyword">self</span>.models[indexPath.row]</span><br><span class="line">    <span class="keyword">if</span> model.vod_pic?.isEmpty == <span class="literal">false</span> &#123;</span><br><span class="line">        cell.imageView.kf.indicatorType = .activity</span><br><span class="line">        cell.imageView.kf.setImage(with: <span class="type">ImageResource</span>(downloadURL: <span class="type">URL</span>(string: model.vod_pic!)!), placeholder: <span class="type">UIImage</span>(named:<span class="string">"zanwutupian"</span>))</span><br><span class="line">    &#125;</span><br><span class="line">    cell.titleLabel.text = model.vod_name</span><br><span class="line">    <span class="keyword">return</span> cell</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 显示骨架cell的个数</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">collectionSkeletonView</span><span class="params">(<span class="number">_</span> skeletonView: UICollectionView, numberOfItemsInSection section: Int)</span></span> -&gt; <span class="type">Int</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">12</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="4-2-设置视图skeletonables"><a href="#4-2-设置视图skeletonables" class="headerlink" title="4.2 设置视图skeletonables"></a>4.2 设置视图skeletonables</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">class MovieHomeCell: DiaryBaseCollectionViewCell &#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 图片</span></span><br><span class="line"><span class="selector-tag">var</span> imageView = UIImageView()</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 标题</span></span><br><span class="line"><span class="selector-tag">var</span> titleLabel = UILabel()</span><br><span class="line"></span><br><span class="line">override func config() &#123;</span><br><span class="line">    self<span class="selector-class">.isSkeletonable</span> = true</span><br><span class="line">    self<span class="selector-class">.contentView</span><span class="selector-class">.layer</span><span class="selector-class">.cornerRadius</span> = <span class="number">10</span></span><br><span class="line">    self<span class="selector-class">.layer</span><span class="selector-class">.cornerRadius</span> = <span class="number">10</span></span><br><span class="line">    self<span class="selector-class">.contentView</span><span class="selector-class">.clipsToBounds</span> = true</span><br><span class="line"></span><br><span class="line">    self<span class="selector-class">.contentView</span><span class="selector-class">.addSubview</span>(self.titleLabel)</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.font</span> = LCZBoldFontSize(size: <span class="number">16</span>)</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.snp</span><span class="selector-class">.makeConstraints</span>(&#123; (make) <span class="keyword">in</span></span><br><span class="line">        make<span class="selector-class">.bottom</span><span class="selector-class">.equalToSuperview</span>().offset(-<span class="number">10</span>)</span><br><span class="line">        make<span class="selector-class">.left</span><span class="selector-class">.equalToSuperview</span>().offset(<span class="number">10</span>)</span><br><span class="line">        make<span class="selector-class">.right</span><span class="selector-class">.equalToSuperview</span>().offset(-<span class="number">10</span>)</span><br><span class="line">    &#125;)</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.textAlignment</span> = .center</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.font</span> = LCZFontSize(size: <span class="number">14</span>)</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.textColor</span> = LCZHexadecimalColor(hexadecimal: <span class="string">"#FECE1D"</span>)</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.isSkeletonable</span> = true</span><br><span class="line">    self<span class="selector-class">.titleLabel</span><span class="selector-class">.text</span> = <span class="string">"乐淘视界"</span></span><br><span class="line"></span><br><span class="line">    self<span class="selector-class">.contentView</span><span class="selector-class">.addSubview</span>(self.imageView)</span><br><span class="line">    self<span class="selector-class">.imageView</span><span class="selector-class">.contentMode</span> = .scaleAspectFill</span><br><span class="line">    self<span class="selector-class">.imageView</span><span class="selector-class">.clipsToBounds</span> = true</span><br><span class="line">    self<span class="selector-class">.imageView</span><span class="selector-class">.snp</span><span class="selector-class">.makeConstraints</span> &#123; (make) <span class="keyword">in</span></span><br><span class="line">        make<span class="selector-class">.left</span><span class="selector-class">.top</span><span class="selector-class">.right</span><span class="selector-class">.equalToSuperview</span>()</span><br><span class="line">        make<span class="selector-class">.bottom</span><span class="selector-class">.equalTo</span>(self<span class="selector-class">.titleLabel</span><span class="selector-class">.snp</span><span class="selector-class">.top</span>).offset(-<span class="number">10</span>)</span><br><span class="line">    &#125;</span><br><span class="line">    self<span class="selector-class">.imageView</span><span class="selector-class">.isSkeletonable</span> = true</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="3-3-显示骨架-1"><a href="#3-3-显示骨架-1" class="headerlink" title="3.3 显示骨架"></a>3.3 显示骨架</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">view.isSkeletonable = <span class="literal">true</span></span><br><span class="line">self.moreMoviesView.collectionView.prepareSkeleton(<span class="string">completion:</span> &#123; done <span class="keyword">in</span></span><br><span class="line">    self.view.showAnimatedGradientSkeleton(<span class="string">usingGradient:</span> SkeletonGradient(<span class="string">baseColor:</span> UIColor.clouds),</span><br><span class="line"><span class="symbol">    animation:</span> GradientDirection.topLeftBottomRight.slidingAnimation())</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/Juanpe/SkeletonView&quot; title=&quot;SkeletonView&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;SkeletonView&lt;/a&gt;一种优雅的方式，向用户显示正在发生的事情
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 UILabel</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20UILabel/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 UILabel/</id>
    <published>2019-06-13T10:44:35.000Z</published>
    <updated>2019-06-13T09:05:35.505Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-超出宽度的文本省略号的问题"><a href="#1-超出宽度的文本省略号的问题" class="headerlink" title="1. 超出宽度的文本省略号的问题"></a>1. 超出宽度的文本省略号的问题</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">logisticsDetailsLabel<span class="selector-class">.lineBreakMode</span> = .byCharWrapping</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-超出宽度的文本省略号的问题&quot;&gt;&lt;a href=&quot;#1-超出宽度的文本省略号的问题&quot; class=&quot;headerlink&quot; title=&quot;1. 超出宽度的文本省略号的问题&quot;&gt;&lt;/a&gt;1. 超出宽度的文本省略号的问题&lt;/h2&gt;&lt;figure class=&quot;high
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 UITabBarController</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20UITabBarController/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 UITabBarController/</id>
    <published>2019-06-13T10:41:54.000Z</published>
    <updated>2019-06-13T09:03:15.733Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-隐藏UITabBarController上的按钮"><a href="#1-隐藏UITabBarController上的按钮" class="headerlink" title="1. 隐藏UITabBarController上的按钮"></a>1. 隐藏UITabBarController上的按钮</h2><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">[viewController willMoveToParentViewController:nil]</span><span class="comment">;</span></span><br><span class="line"><span class="section">[viewController.view removeFromSuperview]</span><span class="comment">;</span></span><br><span class="line"><span class="section">[viewController removeFromParentViewController]</span><span class="comment">;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-隐藏UITabBarController上的按钮&quot;&gt;&lt;a href=&quot;#1-隐藏UITabBarController上的按钮&quot; class=&quot;headerlink&quot; title=&quot;1. 隐藏UITabBarController上的按钮&quot;&gt;&lt;/a&gt;1. 隐藏UI
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 UITableView</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20UITableView/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 UITableView/</id>
    <published>2019-06-13T10:30:54.000Z</published>
    <updated>2019-06-13T09:01:43.731Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-UITableView自适应高度"><a href="#1-UITableView自适应高度" class="headerlink" title="1. UITableView自适应高度"></a>1. UITableView自适应高度</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.homeTableView.estimatedRowHeight = <span class="number">44</span></span><br><span class="line"><span class="keyword">self</span>.homeTableView.rowHeight = <span class="built_in">UITableViewAutomaticDimension</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-UITableView自适应高度&quot;&gt;&lt;a href=&quot;#1-UITableView自适应高度&quot; class=&quot;headerlink&quot; title=&quot;1. UITableView自适应高度&quot;&gt;&lt;/a&gt;1. UITableView自适应高度&lt;/h2&gt;&lt;figure
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 SnapKit、Masonry</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20Masonry%E3%80%81SnapKit/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 Masonry、SnapKit/</id>
    <published>2019-06-13T10:20:24.000Z</published>
    <updated>2019-06-13T08:58:56.856Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-SnapKit"><a href="#1-SnapKit" class="headerlink" title="1. SnapKit"></a>1. SnapKit</h2><p>优先完全显示内容、抵抗压缩<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">self<span class="selector-class">.title</span><span class="selector-class">.setContentHuggingPriority</span>(<span class="selector-class">.required</span>, <span class="keyword">for</span>: .horizontal)</span><br><span class="line">self<span class="selector-class">.title</span><span class="selector-class">.setContentCompressionResistancePriority</span>(<span class="selector-class">.required</span>, <span class="keyword">for</span>: .horizontal)</span><br></pre></td></tr></table></figure></p><h2 id="2-Masonry"><a href="#2-Masonry" class="headerlink" title="2. Masonry"></a>2. Masonry</h2><p>优先完全显示内容、抵抗压缩<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[<span class="keyword">self</span>.titleLabel setContentHuggingPriority:<span class="built_in">UILayoutPriorityRequired</span> forAxis:<span class="built_in">UILayoutConstraintAxisHorizontal</span>];</span><br><span class="line">[<span class="keyword">self</span>.titleLabel setContentCompressionResistancePriority:<span class="built_in">UILayoutPriorityRequired</span> forAxis:<span class="built_in">UILayoutConstraintAxisHorizontal</span>];</span><br></pre></td></tr></table></figure></p><h2 id="3-获取frame"><a href="#3-获取frame" class="headerlink" title="3. 获取frame"></a>3. 获取frame</h2><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">self<span class="selector-class">.titleLabel</span><span class="selector-class">.layoutIfNeeded</span>()</span><br><span class="line"><span class="function"><span class="title">print</span><span class="params">(self.titleLabel.frame)</span></span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-SnapKit&quot;&gt;&lt;a href=&quot;#1-SnapKit&quot; class=&quot;headerlink&quot; title=&quot;1. SnapKit&quot;&gt;&lt;/a&gt;1. SnapKit&lt;/h2&gt;&lt;p&gt;优先完全显示内容、抵抗压缩&lt;br&gt;&lt;figure class=&quot;highligh
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 子视图中获取父控制器、父视图</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20%E5%AD%90%E8%A7%86%E5%9B%BE%E4%B8%AD%E8%8E%B7%E5%8F%96%E7%88%B6%E6%8E%A7%E5%88%B6%E5%99%A8%E3%80%81%E7%88%B6%E8%A7%86%E5%9B%BE/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 子视图中获取父控制器、父视图/</id>
    <published>2019-06-13T09:45:24.000Z</published>
    <updated>2019-06-13T08:53:00.019Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Objective-C"><a href="#Objective-C" class="headerlink" title="Objective-C"></a>Objective-C</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">获取父控制器</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@param view 当前视图</span></span><br><span class="line"><span class="comment">@param className 需要获取的控制器名称</span></span><br><span class="line"><span class="comment">@return 返回控制器对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">- (<span class="built_in">UIViewController</span> *)LCZGetSuperViewController:(<span class="built_in">UIView</span> *)currentview superViewControllerClassName:(<span class="built_in">NSString</span> *)className</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="built_in">UIView</span>* next = [current superview]; next; next = next.superview) &#123;</span><br><span class="line">        <span class="built_in">UIResponder</span> *nextResponder = [next nextResponder];</span><br><span class="line">        <span class="keyword">if</span> ([nextResponder isKindOfClass:[<span class="built_in">NSClassFromString</span>(className) <span class="keyword">class</span>]]) &#123;</span><br><span class="line">            <span class="keyword">return</span> (<span class="built_in">UIViewController</span> *)nextResponder;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">获取当前视图中的目标父视图</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">@param currentView 当前视图</span></span><br><span class="line"><span class="comment">@param superView 父视图</span></span><br><span class="line"><span class="comment">@return 父视图对象</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">- (<span class="built_in">UIView</span> *)LCZGetSuperView:(<span class="built_in">UIView</span> *)currentView superView:(<span class="built_in">UIView</span> *)superView &#123;</span><br><span class="line">    <span class="built_in">UIView</span> *view = currentView.superview;</span><br><span class="line">    <span class="keyword">while</span> (![view isKindOfClass:[superView <span class="keyword">class</span>]]) &#123;</span><br><span class="line">        <span class="keyword">if</span> (view.superview == <span class="literal">nil</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            view = [view superview];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> view;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="Swift"><a href="#Swift" class="headerlink" title="Swift"></a>Swift</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/// 通过当前视图获取父视图的控制器</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - Parameters:</span></span><br><span class="line"><span class="comment">///   - currentView: 当前视图</span></span><br><span class="line"><span class="comment">///   - viewController: 需要获取到的控制器</span></span><br><span class="line"><span class="comment">/// - Returns: 返回控制器</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">LCZGetSuperViewController</span>&lt;T: UIViewController&gt;<span class="params">(currentView:UIView, viewController: T.<span class="keyword">Type</span>)</span></span> -&gt; <span class="type">T?</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> view: <span class="type">UIView</span> = currentView.superview!</span><br><span class="line">    <span class="keyword">while</span> view.next!.isKind(of: <span class="type">T</span>.<span class="keyword">self</span>) != <span class="literal">true</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> view.superview != <span class="literal">nil</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        view = view.superview!</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> view.next <span class="keyword">as</span>? <span class="type">T</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/// 获取当前视图中的目标父视图</span></span><br><span class="line"><span class="comment">///</span></span><br><span class="line"><span class="comment">/// - Parameters:</span></span><br><span class="line"><span class="comment">///   - currentView: 当前视图</span></span><br><span class="line"><span class="comment">///   - superView: 目标父视图</span></span><br><span class="line"><span class="comment">/// - Returns: 返回父视图</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">func</span> <span class="title">LCZGetSuperView</span>&lt;T: UIView&gt;<span class="params">(currentView: UIView, superView: T.<span class="keyword">Type</span>)</span></span> -&gt; <span class="type">T?</span> &#123;</span><br><span class="line">    <span class="keyword">var</span> view: <span class="type">UIView</span> = currentView.superview!</span><br><span class="line">    <span class="keyword">while</span> view.isKind(of: <span class="type">T</span>.<span class="keyword">self</span>) != <span class="literal">true</span> &#123;</span><br><span class="line">        <span class="keyword">guard</span> view.superview != <span class="literal">nil</span> <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">        &#125;</span><br><span class="line">        view = view.superview!</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> view <span class="keyword">as</span>? <span class="type">T</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Objective-C&quot;&gt;&lt;a href=&quot;#Objective-C&quot; class=&quot;headerlink&quot; title=&quot;Objective-C&quot;&gt;&lt;/a&gt;Objective-C&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 GCD</title>
    <link href="http://yoursite.com/2019/06/13/2019-6-13%20GCD/"/>
    <id>http://yoursite.com/2019/06/13/2019-6-13 GCD/</id>
    <published>2019-06-13T08:45:24.000Z</published>
    <updated>2019-06-13T09:00:34.161Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-GCD信号量"><a href="#1-GCD信号量" class="headerlink" title="1. GCD信号量"></a>1. GCD信号量</h2><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//创建信号量</span></span><br><span class="line">dispatch_semaphore_t semaphore = dispatch_semaphore_create(<span class="number">1</span>);</span><br><span class="line"><span class="built_in">dispatch_queue_t</span> queue = dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">dispatch_async</span>(queue, ^&#123;</span><br><span class="line">    <span class="comment">// 等待信号量</span></span><br><span class="line">    dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class="line">    <span class="comment">// 发起网络请求</span></span><br><span class="line">    [BadgeCountModel HomeBadgeCountBlock:^(<span class="built_in">NSDictionary</span> *data) &#123;</span><br><span class="line">        <span class="built_in">NSNumber</span> *num = data[<span class="string">@"num"</span>];</span><br><span class="line">        <span class="keyword">if</span> (num.integerValue &gt; <span class="number">0</span> ) &#123;</span><br><span class="line">            weakSelf.rightBt.isShowBadge = <span class="literal">YES</span>;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            weakSelf.rightBt.isShowBadge = <span class="literal">NO</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 发送信号量</span></span><br><span class="line">        dispatch_semaphore_signal(semaphore);</span><br><span class="line">    &#125; andError:^(<span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        dispatch_semaphore_signal(semaphore);</span><br><span class="line">    &#125;]; </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">dispatch_async</span>(queue, ^&#123;</span><br><span class="line">dispatch_semaphore_wait(semaphore, DISPATCH_TIME_FOREVER);</span><br><span class="line">    <span class="comment">// 发起网络请求</span></span><br><span class="line">    [BadgeCountModel HomeDetailBadgeCountBlock:^(<span class="built_in">NSArray</span> *data) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!weakSelf.badgeDict) &#123;</span><br><span class="line">            weakSelf.badgeDict = [<span class="built_in">NSMutableDictionary</span> dictionary];</span><br><span class="line">        &#125;</span><br><span class="line">        [weakSelf.badgeDict removeAllObjects];</span><br><span class="line">        <span class="built_in">NSMutableArray</span> *badgeArray = [<span class="built_in">NSMutableArray</span> array];</span><br><span class="line">        <span class="keyword">for</span> (<span class="built_in">NSDictionary</span> *dict <span class="keyword">in</span> data) &#123;</span><br><span class="line">            BadgeCountModel *model = [[BadgeCountModel alloc] init];</span><br><span class="line">            model.code = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>,dict[<span class="string">@"key"</span>]];</span><br><span class="line">            model.value = [<span class="built_in">NSString</span> stringWithFormat:<span class="string">@"%@"</span>,dict[<span class="string">@"value"</span>]];</span><br><span class="line">            [badgeArray addObject:model];</span><br><span class="line">            <span class="built_in">NSIndexPath</span> *path = [<span class="keyword">self</span> getIndexPathWithCode:model.code];</span><br><span class="line">            <span class="keyword">if</span> (!path) &#123;</span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            [weakSelf.badgeDict setObject:model.value forKey:path];</span><br><span class="line">        &#125;</span><br><span class="line">        [weakSelf.collectionView reloadData];</span><br><span class="line">        [[GLMenuManager shareInstance] setRedPointArray:badgeArray];</span><br><span class="line">        dispatch_semaphore_signal(semaphore);</span><br><span class="line">    &#125; andError:^(<span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">        dispatch_semaphore_signal(semaphore);</span><br><span class="line">    &#125;];</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h2 id="2-GCD单例"><a href="#2-GCD单例" class="headerlink" title="2. GCD单例"></a>2. GCD单例</h2><figure class="highlight mipsasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">+ (<span class="keyword">instancetype)shared </span>&#123;</span><br><span class="line">    static <span class="keyword">Share </span>*<span class="keyword">shared </span>= nil<span class="comment">;</span></span><br><span class="line">    static <span class="keyword">dispatch_once_t </span>onceToken<span class="comment">;</span></span><br><span class="line">    <span class="keyword">dispatch_once(&amp;onceToken, </span>^&#123;</span><br><span class="line">        <span class="keyword">shared </span>= [[<span class="keyword">Share </span>alloc]init]<span class="comment">;</span></span><br><span class="line">    &#125;)<span class="comment">;</span></span><br><span class="line">    return <span class="keyword">shared;</span></span><br><span class="line"><span class="keyword">&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-GCD信号量&quot;&gt;&lt;a href=&quot;#1-GCD信号量&quot; class=&quot;headerlink&quot; title=&quot;1. GCD信号量&quot;&gt;&lt;/a&gt;1. GCD信号量&lt;/h2&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>java开发 MyBatis逆向工程配置</title>
    <link href="http://yoursite.com/2019/06/04/2019-6-04%20MyBatis%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2019/06/04/2019-6-04 MyBatis逆向工程配置/</id>
    <published>2019-06-04T09:45:24.000Z</published>
    <updated>2019-06-04T09:50:04.357Z</updated>
    
    <content type="html"><![CDATA[<p>mybatis-generator.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span></span><br><span class="line"><span class="meta">&lt;!DOCTYPE generatorConfiguration</span></span><br><span class="line"><span class="meta">PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"</span></span><br><span class="line"><span class="meta">"http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd"&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">generatorConfiguration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">context</span> <span class="attr">id</span>=<span class="string">"cosmetic"</span>   <span class="attr">targetRuntime</span>=<span class="string">"MyBatis3"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressDate"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 是否去除自动生成的注释 true：是 ： false:否 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"suppressAllComments"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">commentGenerator</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--数据库链接地址账号密码--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">jdbcConnection</span> <span class="attr">driverClass</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span> <span class="attr">connectionURL</span>=<span class="string">"jdbc:mysql://localhost:3306/diary?serverTimezone=UTC&amp;amp;characterEncoding=utf8&amp;amp;useUnicode=true&amp;amp;useSSL=false"</span> <span class="attr">userId</span>=<span class="string">"root"</span> <span class="attr">password</span>=<span class="string">"666666"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 防止生成字段不全 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"nullCatalogMeansCurrent"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">jdbcConnection</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;jdbcConnection driverClass="oracle.jdbc.OracleDriver"</span></span><br><span class="line"><span class="comment">    connectionURL="jdbc:oracle:thin:@127.0.0.1:1521:orcl" </span></span><br><span class="line"><span class="comment">    userId="scott"</span></span><br><span class="line"><span class="comment">    password="0000"&gt;</span></span><br><span class="line"><span class="comment">    &lt;/jdbcConnection&gt; --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 默认false，把JDBC DECIMAL 和 NUMERIC 类型解析为 Integer，为 true时把JDBC DECIMAL 和 </span></span><br><span class="line"><span class="comment">    NUMERIC 类型解析为java.math.BigDecimal --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"forceBigDecimals"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaTypeResolver</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--生成pojo类存放位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaModelGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.diary.generator.pojo"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 从数据库返回的值清理前后的空格 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"trimStrings"</span> <span class="attr">value</span>=<span class="string">"true"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaModelGenerator</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--生成映射文件mapper接口存放位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">sqlMapGenerator</span> <span class="attr">targetPackage</span>=<span class="string">"com.diary.generator.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">sqlMapGenerator</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--生成mapper接口、mapper.xml类存放位置--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">javaClientGenerator</span> <span class="attr">type</span>=<span class="string">"XMLMAPPER"</span> <span class="attr">targetPackage</span>=<span class="string">"com.diary.generator.mapper"</span> <span class="attr">targetProject</span>=<span class="string">"src/main/java"</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 是否让schema作为包的后缀 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span> <span class="attr">name</span>=<span class="string">"enableSubPackages"</span> <span class="attr">value</span>=<span class="string">"false"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">javaClientGenerator</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--生成对应表及类名,需要记住的一点是逆向工程无法生成关联关系,只能生成单表操作--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">table</span>  <span class="attr">tableName</span>=<span class="string">"user"</span>   <span class="attr">domainObjectName</span>=<span class="string">"User"</span> /&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--        &lt;table  tableName="permission"   domainObjectName="Permission" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;table  tableName="role"   domainObjectName="Role" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;table  tableName="role_permission"   domainObjectName="RolePermission" /&gt;</span></span><br><span class="line"><span class="comment">    &lt;table  tableName="user_role"   domainObjectName="UserRole" /&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">context</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">generatorConfiguration</span>&gt;</span></span><br></pre></td></tr></table></figure></p><p>测试<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> void main(<span class="keyword">String</span>[] args) throws Exception &#123;</span><br><span class="line">    <span class="comment">// TODO Auto-generated method stub</span></span><br><span class="line">    List&lt;<span class="keyword">String</span>&gt; warnings = <span class="keyword">new</span> <span class="type">ArrayList</span>&lt;<span class="keyword">String</span>&gt;();</span><br><span class="line">    boolean overwrite = <span class="literal">true</span>;</span><br><span class="line">    <span class="comment">//指向逆向工程配置文件</span></span><br><span class="line">    File configFile = <span class="keyword">new</span> <span class="type">File</span>(<span class="string">"src/main/resources/mybatis-generator.xml"</span>);</span><br><span class="line">    ConfigurationParser cp = <span class="keyword">new</span> <span class="type">ConfigurationParser</span>(warnings);</span><br><span class="line"></span><br><span class="line">    Configuration config = cp.parseConfiguration(configFile);</span><br><span class="line">    DefaultShellCallback callback = <span class="keyword">new</span> <span class="type">DefaultShellCallback</span>(overwrite);</span><br><span class="line">    MyBatisGenerator myBatisGenerator =</span><br><span class="line">    <span class="keyword">new</span> <span class="type">MyBatisGenerator</span>(config, callback, warnings);</span><br><span class="line">    myBatisGenerator.generate(<span class="literal">null</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;mybatis-generator.xml&lt;br&gt;&lt;figure class=&quot;highlight xml&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;lin
      
    
    </summary>
    
    
      <category term="java" scheme="http://yoursite.com/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>iOS开发 RunTime</title>
    <link href="http://yoursite.com/2019/05/22/2019-5-22%20iOS%20runtime/"/>
    <id>http://yoursite.com/2019/05/22/2019-5-22 iOS runtime/</id>
    <published>2019-05-22T07:44:45.000Z</published>
    <updated>2019-05-29T02:18:38.929Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-方法交换"><a href="#1-方法交换" class="headerlink" title="1.方法交换"></a>1.方法交换</h2><p>我们可以将Method Swizzling功能封装为类方法，作为NSObject的类别，这样我们后续调用也会方便些。</p><p>NSObject+Swizzling.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;Foundation/Foundation.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">NSObject</span> (<span class="title">Swizzling</span>)</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> 方法交换</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> @param originalSelector 源方法</span></span><br><span class="line"><span class="comment"> @param swizzledSelector 新方法</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">+ (<span class="keyword">void</span>)methodSwizzlingWithOriginalSelector:(SEL)originalSelector</span><br><span class="line">                        andSwizzledSelector:(SEL)swizzledSelector;</span><br><span class="line">                        </span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure></p><p>NSObject+Swizzling.m<br><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#<span class="keyword">import</span> <span class="string">"NSObject+Swizzling.h"</span></span><br><span class="line">#<span class="keyword">import</span>&lt;objc/runtime.h&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">@implementation</span> NSObject (Swizzling)</span><br><span class="line"></span><br><span class="line">+ (void)methodSwizzlingWithOriginalSelector:(SEL)originalSelector</span><br><span class="line">                        andSwizzledSelector:(SEL)swizzledSelector &#123;</span><br><span class="line">    Class <span class="class"><span class="keyword">class</span> = [<span class="title">self</span> <span class="title">class</span>];</span></span><br><span class="line">    <span class="comment">//原有方法</span></span><br><span class="line">    Method originalMethod = class_getInstanceMethod(<span class="class"><span class="keyword">class</span>, <span class="type">originalSelector);</span></span></span><br><span class="line">    <span class="comment">//替换原有方法的新方法</span></span><br><span class="line">    Method swizzledMethod = class_getInstanceMethod(<span class="class"><span class="keyword">class</span>, <span class="type">swizzledSelector);</span></span></span><br><span class="line">    <span class="comment">//先尝试給源SEL添加IMP，这里是为了避免源SEL没有实现IMP的情况</span></span><br><span class="line">    BOOL didAddMethod = class_addMethod(<span class="class"><span class="keyword">class</span>,<span class="type">originalSelector</span>,<span class="type"></span></span></span><br><span class="line">    method_getImplementation(swizzledMethod),</span><br><span class="line">    method_getTypeEncoding(swizzledMethod));</span><br><span class="line">    <span class="keyword">if</span> (didAddMethod) &#123;<span class="comment">//添加成功：说明源SEL没有实现IMP，将源SEL的IMP替换到交换SEL的IMP</span></span><br><span class="line">        class_replaceMethod(<span class="class"><span class="keyword">class</span>,<span class="type">swizzledSelector</span>,<span class="type"></span></span></span><br><span class="line">        method_getImplementation(originalMethod),</span><br><span class="line">        method_getTypeEncoding(originalMethod));</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;<span class="comment">//添加失败：说明源SEL已经有IMP，直接将两个SEL的IMP交换即可</span></span><br><span class="line">        method_exchangeImplementations(originalMethod, swizzledMethod);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@end</span></span><br></pre></td></tr></table></figure></p><p>ViewController.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"ViewController.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"NSObject+Swizzling.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">ViewController</span> (<span class="title">Swizzling</span>)</span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)load &#123;</span><br><span class="line">    <span class="keyword">static</span> <span class="built_in">dispatch_once_t</span> onceToken;</span><br><span class="line">    <span class="built_in">dispatch_once</span>(&amp;onceToken, ^&#123;</span><br><span class="line">        <span class="comment">// 交换对象方法</span></span><br><span class="line">        [<span class="keyword">self</span> methodSwizzlingWithOriginalSelector:<span class="keyword">@selector</span>(viewWillAppear:) andSwizzledSelector:<span class="keyword">@selector</span>(lczViewWillAppear:)];</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 交换类方法</span></span><br><span class="line">        [object_getClass([LibDevModel <span class="keyword">class</span>]) methodSwizzlingWithOriginalSelector:<span class="keyword">@selector</span>(onScanOver:) andSwizzledSelector:<span class="keyword">@selector</span>(lczOnScanOver:)];</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="2-消息转发"><a href="#2-消息转发" class="headerlink" title="2.消息转发"></a>2.消息转发</h2><p>2.1 转发对象方法</p><p>LibDevModel+Swizzling.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;DoorMasterSDK/DoorMasterSDK.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">LibDevModel</span> (<span class="title">Swizzling</span>)</span></span><br><span class="line">- (<span class="keyword">void</span>)lczTimerCancel;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure></p><p>LibDevModel+Swizzling.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"LibDevModel+Swizzling.h"</span></span></span><br><span class="line"><span class="meta">#import <span class="meta-string">"GLGuardViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">LibDevModel</span> (<span class="title">Swizzling</span>)</span></span><br><span class="line"></span><br><span class="line">- (<span class="built_in">NSMethodSignature</span> *)methodSignatureForSelector:(SEL)aSelector &#123;</span><br><span class="line">    <span class="comment">// 获取 aSelector 的方法签名</span></span><br><span class="line">    <span class="built_in">NSMethodSignature</span> *signature = [<span class="keyword">super</span> methodSignatureForSelector:aSelector];</span><br><span class="line">    <span class="keyword">if</span> (!signature) &#123; <span class="comment">// 如果无法获取</span></span><br><span class="line">        <span class="comment">// 判断 ViewController 是否能够响应 aSelector</span></span><br><span class="line">        <span class="keyword">if</span> ([ViewController instancesRespondToSelector:aSelector]) &#123;</span><br><span class="line">            <span class="comment">// 获取 ViewController 中 aSelector 的方法签名</span></span><br><span class="line">            signature = [ViewController instanceMethodSignatureForSelector:aSelector];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> signature;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)forwardInvocation:(<span class="built_in">NSInvocation</span> *)anInvocation &#123;</span><br><span class="line">    <span class="keyword">if</span> ([ViewController instancesRespondToSelector:anInvocation.selector]) &#123;</span><br><span class="line">        [anInvocation invokeWithTarget:[ViewController new]];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>GLGuardViewController.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"GLGuardViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GLGuardViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">GLGuardViewController</span></span></span><br><span class="line"></span><br><span class="line">- (<span class="keyword">void</span>)lczTimerCancel &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"调用了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>2.2 转发类方法</p><p>LibDevModel+Swizzling.h<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">&lt;DoorMasterSDK/DoorMasterSDK.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_BEGIN</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">LibDevModel</span> (<span class="title">Swizzling</span>)</span></span><br><span class="line">+ (<span class="keyword">void</span>)lczTimerCancel;</span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">NS_ASSUME_NONNULL_END</span></span><br></pre></td></tr></table></figure></p><p>LibDevModel+Swizzling.m<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">+ (NSMethodSignature *)<span class="string">methodSignatureForSelector:</span>(SEL)aSelector &#123;</span><br><span class="line">    <span class="comment">// 获取 aSelector 的方法签名</span></span><br><span class="line">    NSMethodSignature *signature = [<span class="keyword">super</span> <span class="string">methodSignatureForSelector:</span>aSelector];</span><br><span class="line">    <span class="keyword">if</span> (!signature) &#123; <span class="comment">// 如果无法获取</span></span><br><span class="line">        <span class="comment">// 判断 ViewController 是否能够响应 aSelector</span></span><br><span class="line">        <span class="keyword">if</span> ([GLGuardViewController <span class="string">respondsToSelector:</span>aSelector]) &#123;</span><br><span class="line">            <span class="comment">// 获取 ViewController 中 aSelector 的方法签名</span></span><br><span class="line">            signature = [GLGuardViewController <span class="string">methodSignatureForSelector:</span>aSelector];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> signature;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)<span class="string">forwardInvocation:</span>(NSInvocation *)anInvocation &#123;</span><br><span class="line">    <span class="keyword">if</span> ([GLGuardViewController <span class="string">respondsToSelector:</span>anInvocation.selector]) &#123;</span><br><span class="line">        [anInvocation <span class="string">invokeWithTarget:</span>[GLGuardViewController <span class="class"><span class="keyword">class</span>]];</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br></pre></td></tr></table></figure></p><p>GLGuardViewController.m<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#import <span class="meta-string">"GLGuardViewController.h"</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@interface</span> <span class="title">GLGuardViewController</span> ()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">@end</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">@implementation</span> <span class="title">GLGuardViewController</span></span></span><br><span class="line"></span><br><span class="line">+ (<span class="keyword">void</span>)lczTimerCancel &#123;</span><br><span class="line">    <span class="built_in">NSLog</span>(<span class="string">@"调用了"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-方法交换&quot;&gt;&lt;a href=&quot;#1-方法交换&quot; class=&quot;headerlink&quot; title=&quot;1.方法交换&quot;&gt;&lt;/a&gt;1.方法交换&lt;/h2&gt;&lt;p&gt;我们可以将Method Swizzling功能封装为类方法，作为NSObject的类别，这样我们后续调用也会
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>AFNetworking 网络请求重试机制</title>
    <link href="http://yoursite.com/2019/04/29/2019-4-29%20AFNetworking%20%E7%BD%91%E7%BB%9C%E8%AF%B7%E6%B1%82%E9%87%8D%E8%AF%95%E6%9C%BA%E5%88%B6/"/>
    <id>http://yoursite.com/2019/04/29/2019-4-29 AFNetworking 网络请求重试机制/</id>
    <published>2019-04-29T05:44:24.000Z</published>
    <updated>2019-04-29T08:44:55.474Z</updated>
    
    <content type="html"><![CDATA[<p>使用递归方式<br><figure class="highlight objectivec"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">- (<span class="keyword">void</span>)downloadFileRetryingNumberOfTimes:(<span class="built_in">NSUInteger</span>)ntimes </span><br><span class="line">                                success:(<span class="keyword">void</span> (^)(<span class="keyword">id</span> responseObject))success </span><br><span class="line">                                failure:(<span class="keyword">void</span> (^)(<span class="built_in">NSError</span> *error))failure</span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">if</span> (ntimes &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (failure) &#123;</span><br><span class="line">        <span class="built_in">NSError</span> *error = ...;</span><br><span class="line">        failure(error);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        [<span class="keyword">self</span> getPath:<span class="string">@"/path/to/file"</span> parameters:<span class="literal">nil</span> success:^(AFHTTPRequestOperation *operation, <span class="keyword">id</span> responseObject) &#123;</span><br><span class="line">            <span class="keyword">if</span> (success) &#123;</span><br><span class="line">            success(...);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; failure:^(AFHTTPRequestOperation *operation, <span class="built_in">NSError</span> *error) &#123;</span><br><span class="line">            [<span class="keyword">self</span> downloadFileRetryingNumberOfTimes:ntimes - <span class="number">1</span> success:success failure:failure];</span><br><span class="line">        &#125;];</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>摘录于<a href="&quot;https://github.com/AFNetworking/AFNetworking/issues/393&quot;">AFNetworking Issuse</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;使用递归方式&lt;br&gt;&lt;figure class=&quot;highlight objectivec&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/sp
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MAC MyBatis访问MySQL 8 报错consider upgrading MySQL client</title>
    <link href="http://yoursite.com/2019/04/27/2019-4-27%20MySQL%208%E8%AE%BF%E9%97%AE%E6%8A%A5%E9%94%99/"/>
    <id>http://yoursite.com/2019/04/27/2019-4-27 MySQL 8访问报错/</id>
    <published>2019-04-27T06:17:11.000Z</published>
    <updated>2019-04-28T04:36:39.896Z</updated>
    
    <content type="html"><![CDATA[<p>原因是：安装MySQL 8过程中的Authentication Method这一配置过程，基于不同的加密方式。<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">// 登录MySQL</span><br><span class="line">mysql -u root -p</span><br><span class="line">// 更改加密方式 (666666为mMySQL密码)</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">BY</span> <span class="string">'666666'</span> <span class="keyword">PASSWORD</span> <span class="keyword">EXPIRE</span> <span class="keyword">NEVER</span>;</span><br><span class="line">// 更改密码</span><br><span class="line"><span class="keyword">ALTER</span> <span class="keyword">USER</span> <span class="string">'root'</span>@<span class="string">'localhost'</span> <span class="keyword">IDENTIFIED</span> <span class="keyword">WITH</span> mysql_native_password <span class="keyword">BY</span> <span class="string">'666666'</span>;</span><br><span class="line">// 重启MySQL</span><br><span class="line">mysql.server restart</span><br></pre></td></tr></table></figure></p><h2 id="2-常见问题"><a href="#2-常见问题" class="headerlink" title="2.常见问题"></a>2.常见问题</h2><h3 id="2-1-MySQL-8-driver为：com-mysql-cj-jdbc-Driver"><a href="#2-1-MySQL-8-driver为：com-mysql-cj-jdbc-Driver" class="headerlink" title="2.1 MySQL 8 driver为：com.mysql.cj.jdbc.Driver"></a>2.1 MySQL 8 driver为：com.mysql.cj.jdbc.Driver</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Loading class `com.mysql.jdbc.Drive<span class="string">r'. This is deprecated. The new driver class is `com.mysql.cj.jdbc.Driver'</span>. The driver is automatically registered via the SPI and</span><br><span class="line">manual loading of the driver class is generally unnecessary.</span><br></pre></td></tr></table></figure><h3 id="2-2-url中没有设置useSSL-false"><a href="#2-2-url中没有设置useSSL-false" class="headerlink" title="2.2 url中没有设置useSSL=false"></a>2.2 url中没有设置useSSL=false</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">WARN: Establishing SSL connection <span class="keyword">without</span> server's identity verification <span class="keyword">is</span> <span class="keyword">not</span> recommended. According <span class="keyword">to</span> MySQL <span class="number">5.5</span><span class="number">.45</span>+, <span class="number">5.6</span><span class="number">.26</span>+ <span class="keyword">and</span> <span class="number">5.7</span><span class="number">.6</span>+ requirements &lt;br&gt;SSL connection must be established <span class="keyword">by</span> default <span class="keyword">if</span> explicit option <span class="keyword">isn't</span> <span class="keyword">set</span>. For compliance <span class="keyword">with</span> existing applications <span class="keyword">not</span> using SSL <span class="keyword">the</span> verifyServerCertificate&lt;br&gt; <span class="keyword">property</span> <span class="keyword">is</span> <span class="keyword">set</span> <span class="keyword">to</span> '<span class="literal">false</span>'.You need either <span class="keyword">to</span> explicitly disable SSL <span class="keyword">by</span> setting useSSL=<span class="literal">false</span>, <span class="keyword">or</span> <span class="keyword">set</span> useSSL=<span class="literal">true</span> <span class="keyword">and</span> provide truststore <span class="keyword">for</span> server certificate&lt;br&gt; verification.</span><br></pre></td></tr></table></figure><h3 id="2-3-url中没有设置serverTimezone-UTC"><a href="#2-3-url中没有设置serverTimezone-UTC" class="headerlink" title="2.3 url中没有设置serverTimezone=UTC"></a>2.3 url中没有设置serverTimezone=UTC</h3><figure class="highlight livecodeserver"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The server <span class="built_in">time</span> zone <span class="built_in">value</span> <span class="string">'???ú±ê×??±??'</span> is unrecognized <span class="keyword">or</span> represents more than <span class="literal">one</span> <span class="built_in">time</span> zone. You must configure either <span class="keyword">the</span> server <span class="keyword">or</span> JDBC driver (via <span class="keyword">the</span> </span><br><span class="line">serverTimezone configuration property) <span class="built_in">to</span> use <span class="keyword">a</span> more specifc <span class="built_in">time</span> zone <span class="built_in">value</span> <span class="keyword">if</span> you want <span class="built_in">to</span> utilize <span class="built_in">time</span> zone support.</span><br></pre></td></tr></table></figure><h3 id="2-4-url中参数没有用-拼接-amp-gt-amp"><a href="#2-4-url中参数没有用-拼接-amp-gt-amp" class="headerlink" title="2.4 url中参数没有用;拼接  &amp; -&gt; &amp;"></a>2.4 url中参数没有用;拼接  &amp; -&gt; &amp;</h3><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">The <span class="keyword">reference</span> <span class="keyword">to</span> entity “useSSL” must <span class="keyword">end</span> <span class="keyword">with</span> <span class="keyword">the</span> ‘;’ delimiter.</span><br></pre></td></tr></table></figure><h2 id="3-MySQL-8-连接配置"><a href="#3-MySQL-8-连接配置" class="headerlink" title="3. MySQL 8 连接配置"></a>3. MySQL 8 连接配置</h2><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;property <span class="attribute">name</span>=<span class="string">"driver"</span> <span class="attribute">value</span>=<span class="string">"com.mysql.cj.jdbc.Driver"</span>/&gt; </span><br><span class="line">&lt;property <span class="attribute">name</span>=<span class="string">"url"</span> <span class="attribute">value</span>=<span class="string">"jdbc:mysql://localhost:3306/mybatis?serverTimezone=UTC&amp;amp;characterEncoding=utf8&amp;amp;useUnicode=true&amp;amp;useSSL=false"</span>/&gt;</span><br><span class="line">&lt;property <span class="attribute">name</span>=<span class="string">"username"</span> <span class="attribute">value</span>=<span class="string">"root"</span>/&gt;</span><br><span class="line">&lt;property <span class="attribute">name</span>=<span class="string">"password"</span> <span class="attribute">value</span>=<span class="string">"123456"</span>/&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;原因是：安装MySQL 8过程中的Authentication Method这一配置过程，基于不同的加密方式。&lt;br&gt;&lt;figure class=&quot;highlight sql&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>MAC 安装Tomcat</title>
    <link href="http://yoursite.com/2019/04/18/2019-4-18%20MAC%20%E5%AE%89%E8%A3%85Tomcat/"/>
    <id>http://yoursite.com/2019/04/18/2019-4-18 MAC 安装Tomcat/</id>
    <published>2019-04-18T07:13:50.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-下载Tomcat-如图"><a href="#1-下载Tomcat-如图" class="headerlink" title="1. 下载Tomcat 如图"></a>1. 下载<a href="https://tomcat.apache.org/download-90.cgi" target="_blank" rel="noopener">Tomcat</a> 如图</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/下载Tomcat.png?raw=true" alt="markdown" title="下载Tomcat"></p><h2 id="2-解压并用重命名为Tomcat"><a href="#2-解压并用重命名为Tomcat" class="headerlink" title="2. 解压并用重命名为Tomcat"></a>2. 解压并用重命名为Tomcat</h2><h2 id="3-用终端-Terminal-进入-cd-Tomcat-bin"><a href="#3-用终端-Terminal-进入-cd-Tomcat-bin" class="headerlink" title="3. 用终端(Terminal) 进入 $ cd Tomcat/bin"></a>3. 用终端(Terminal) 进入 <code>$ cd Tomcat/bin</code></h2><h2 id="4-启动Tomcat-sudo-startup-sh"><a href="#4-启动Tomcat-sudo-startup-sh" class="headerlink" title="4. 启动Tomcat $ sudo ./startup.sh"></a>4. 启动Tomcat <code>$ sudo ./startup.sh</code></h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/启动.png?raw=true" alt="markdown" title="启动"></p><h2 id="5-关闭Tomcat-shutdown-sh"><a href="#5-关闭Tomcat-shutdown-sh" class="headerlink" title="5. 关闭Tomcat $ ./shutdown.sh"></a>5. 关闭Tomcat <code>$ ./shutdown.sh</code></h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/MAC 安装Tomcat/关闭.png?raw=true" alt="markdown" title="关闭"></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-下载Tomcat-如图&quot;&gt;&lt;a href=&quot;#1-下载Tomcat-如图&quot; class=&quot;headerlink&quot; title=&quot;1. 下载Tomcat 如图&quot;&gt;&lt;/a&gt;1. 下载&lt;a href=&quot;https://tomcat.apache.org/downlo
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>MAC 显示或隐藏.git目录</title>
    <link href="http://yoursite.com/2019/04/17/2019-4-17%20MAC%20%E6%98%BE%E7%A4%BA%E6%88%96%E9%9A%90%E8%97%8F.git%E7%9B%AE%E5%BD%95/"/>
    <id>http://yoursite.com/2019/04/17/2019-4-17 MAC 显示或隐藏.git目录/</id>
    <published>2019-04-17T03:08:22.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE"><a href="#1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE" class="headerlink" title="1. 显示.git目录：$ defaults write com.apple.finder AppleShowAllFiles TRUE"></a>1. 显示.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles TRUE</code></h2><h2 id="2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE"><a href="#2-隐藏-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-FALSE" class="headerlink" title="2. 隐藏.git目录：$ defaults write com.apple.finder AppleShowAllFiles FALSE"></a>2. 隐藏.git目录：<code>$ defaults write com.apple.finder AppleShowAllFiles FALSE</code></h2><h2 id="3-重启Finder：-killall-Finder"><a href="#3-重启Finder：-killall-Finder" class="headerlink" title="3. 重启Finder：$ killall Finder"></a>3. 重启Finder：<code>$ killall Finder</code></h2><h2 id="4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可"><a href="#4-当你的git仓库中还存在另一个git仓库B，提交时报错changes-not-staged-for-commit，解决方法：进入仓库B中删除-git文件夹，在回到仓库根目录重新提交代码即可" class="headerlink" title="4. 当你的git仓库中还存在另一个git仓库B，提交时报错changes not staged for commit，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可"></a>4. 当你的git仓库中还存在另一个git仓库B，提交时报错<code>changes not staged for commit</code>，解决方法：进入仓库B中删除.git文件夹，在回到仓库根目录重新提交代码即可</h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-显示-git目录：-defaults-write-com-apple-finder-AppleShowAllFiles-TRUE&quot;&gt;&lt;a href=&quot;#1-显示-git目录：-defaults-write-com-apple-finder-AppleShowA
      
    
    </summary>
    
    
      <category term="Git" scheme="http://yoursite.com/tags/Git/"/>
    
  </entry>
  
  <entry>
    <title>MySQL的基本使用</title>
    <link href="http://yoursite.com/2019/04/16/2019-4-16%20MySQL/"/>
    <id>http://yoursite.com/2019/04/16/2019-4-16 MySQL/</id>
    <published>2019-04-16T12:48:01.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true" alt="markdown" title="数据类型"></p><h2 id="1-DDL（数据定义语言）"><a href="#1-DDL（数据定义语言）" class="headerlink" title="1. DDL（数据定义语言）"></a>1. DDL（数据定义语言）</h2><h3 id="1-1-操作数据库"><a href="#1-1-操作数据库" class="headerlink" title="1.1 操作数据库"></a>1.1 操作数据库</h3><h4 id="1-1-1-增"><a href="#1-1-1-增" class="headerlink" title="1.1.1 增"></a>1.1.1 增</h4><p>创建数据库：<br><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">方式一：<span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名; -- 例：<span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mysql;</span><br><span class="line">方式二：<span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> 数据库名 CHARSET 编码; -- 例：<span class="keyword">CREATE</span> <span class="keyword">DATABASE</span> mysql CHARSET utf8;</span><br></pre></td></tr></table></figure></p><h4 id="1-1-2-删"><a href="#1-1-2-删" class="headerlink" title="1.1.2 删"></a>1.1.2 删</h4><p>删除数据库：<code>DROP DATABASE 数据库名; -- 例：DROP DATABASE mysql;</code></p><h4 id="1-1-3-改"><a href="#1-1-3-改" class="headerlink" title="1.1.3 改"></a>1.1.3 改</h4><p>修改正在使用的数据库：<code>USE 数据库名; -- 例：USE mysql;</code></p><h4 id="1-1-4-查"><a href="#1-1-4-查" class="headerlink" title="1.1.4 查"></a>1.1.4 查</h4><p>查询正在使用的数据库：<code>SELECT DATABASE();</code><br>查询mysql中的所有数据库：<code>SHOW DATABASES;</code><br>查询某一个数据库的详细信息：<code>SHOW CREATE DATABASE 数据库名; -- 例：SHOW CREATE DATABASE  mysql;</code></p><h3 id="1-2-操作数据库表"><a href="#1-2-操作数据库表" class="headerlink" title="1.2 操作数据库表"></a>1.2 操作数据库表</h3><h4 id="1-2-1-增"><a href="#1-2-1-增" class="headerlink" title="1.2.1 增"></a>1.2.1 增</h4><p>创建表：<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> 数据库名(</span><br><span class="line">    字段名 数据类型(长度) 约束,</span><br><span class="line">    字段名 数据类型(长度) 约束</span><br><span class="line">);</span><br><span class="line">例：</span><br><span class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> student(</span><br><span class="line">    <span class="keyword">sid</span> <span class="built_in">INT</span> PRIMARY <span class="keyword">KEY</span>, <span class="comment">-- 主键约束</span></span><br><span class="line">    sname <span class="built_in">VARCHAR</span>(<span class="number">30</span>),</span><br><span class="line">    sage <span class="built_in">INT</span></span><br><span class="line">);</span><br></pre></td></tr></table></figure></p><h4 id="1-2-2-删"><a href="#1-2-2-删" class="headerlink" title="1.2.2 删"></a>1.2.2 删</h4><p>删除表：<code>DROP TABLE 表名; -- 例：DROP TABLE student;</code></p><h4 id="1-2-3-查"><a href="#1-2-3-查" class="headerlink" title="1.2.3 查"></a>1.2.3 查</h4><p>查看一个表的详细信息：<code>DESC 表名; -- 例：DESC student;</code><br>查看所有表：<code>SHOW TABLES;</code></p><h4 id="1-2-4-改"><a href="#1-2-4-改" class="headerlink" title="1.2.4 改"></a>1.2.4 改</h4><p>修改表名：<code>RENAME TABLE 表名 TO 新表名; -- 例：RENAME TABLE student TO studentTwo;</code></p><h3 id="1-3-操作数据库表结构"><a href="#1-3-操作数据库表结构" class="headerlink" title="1.3 操作数据库表结构"></a>1.3 操作数据库表结构</h3><h4 id="1-3-1-增"><a href="#1-3-1-增" class="headerlink" title="1.3.1 增"></a>1.3.1 增</h4><p>向表中增加一列：<code>ALTER TABLE 表名 ADD 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student ADD phone VARCHAR(30);</code></p><h4 id="1-3-2-删"><a href="#1-3-2-删" class="headerlink" title="1.3.2 删"></a>1.3.2 删</h4><p>向表中删除一列：<code>ALTER TABLE 表名 DROP 字段名; -- 例：ALTER TABLE student DROP phone;</code></p><h4 id="1-3-3-改"><a href="#1-3-3-改" class="headerlink" title="1.3.3 改"></a>1.3.3 改</h4><p>修改表中的字段名：<code>ALTER TABLE 表名 CHANGE 字段名 新字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student CHANGE sname mname VARCHAR(30);</code><br>修改表中的字段中的变量类型和约束：<code>ALTER TABLE 表名 MODIFY 字段名 数据类型(长度) 约束; -- 例：ALTER TABLE student MODIFY sname VARCHAR(10);</code><br>修改表的字符集：<code>ALTER TABLE 表名 CHARACYER SET 编码; -- 例：ALTER TABLE student CHARACYER SET utf8;</code></p><h2 id="2-DML（数据操作语言）"><a href="#2-DML（数据操作语言）" class="headerlink" title="2. DML（数据操作语言）"></a>2. DML（数据操作语言）</h2><h3 id="2-1-增"><a href="#2-1-增" class="headerlink" title="2.1 增"></a>2.1 增</h3><p>向表中插入一条数据（向表中插入所有字段可省略字段名）：<code>INSERT INFO 表名 (字段1，字段2) VALUES (值1，值2); -- 例：INSERT INFO student (name，age) VALUES (&#39;张三&#39;，18);</code> </p><h3 id="2-2-删"><a href="#2-2-删" class="headerlink" title="2.2 删"></a>2.2 删</h3><p>删除表中的所有记录：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code><br>删除表中的某一条数据：<code>DELETE FROM 表名 WHERE 条件; -- 例：DELETE FROM student WHERE name=&#39;张三&#39;;</code></p><h3 id="2-3-改"><a href="#2-3-改" class="headerlink" title="2.3 改"></a>2.3 改</h3><p>修改表中所有指定字段的信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39;; -- 例：UPDATE student SET name=&#39;李四&#39;;</code><br>修改表中某一条数据的字段信息：<code>UPDATE 表名 SET 字段名=&#39;值&#39; WHERE 条件; -- 例：UPDATE student SET name=&#39;李四&#39; WHERE age=18;</code>  </p><h2 id="3-约束"><a href="#3-约束" class="headerlink" title="3. 约束"></a>3. 约束</h2><p>主键约束（修饰的字段必须唯一且不能为空）：<code>PRIMARY KEY</code><br>自动增长约束：<code>AUTO_INCREMENT</code></p><h2 id="4-删除表所有数据的两种方式"><a href="#4-删除表所有数据的两种方式" class="headerlink" title="4. 删除表所有数据的两种方式"></a>4. 删除表所有数据的两种方式</h2><p>方式一：<code>DELETE FROM 表名; -- 例：DELETE FROM student;</code>（但是自动增长的值不会重置为1）<br>方式二：<code>TRUNCATE TABLE 表名; -- 例：TRUNCATE TABLE student;</code>（先摧毁表，在重建表；自动增长的值会重置为1）</p><h2 id="5-DQL（数据查询语言）"><a href="#5-DQL（数据查询语言）" class="headerlink" title="5. DQL（数据查询语言）"></a>5. DQL（数据查询语言）</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/MySQL/运算符.png?raw=true" alt="markdown" title="运算符"><br>查询表中所有的数据：<code>SELECT * FROM 表名; -- 例：SELECT * FROM student;</code><br>查询表中某个字段的数据：<code>SELECT 字段名1,字段名2 FROM 表名; -- 例：SELECT name FROM student;</code><br>查询表中某个字段的数据并去重（存在多个字段时字段名1且字段名2相同时才会去重）：<code>SELECT DISTINCT 字段名1,字段名2 FROM 表名; -- 例：SELECT DISTINCT name FROM student;</code><br>别名查询：<code>SELECT 字段名 AS 别名 FROM student; -- 例：SELECT name AS 姓名 FROM student;</code><br>查询表中某个字段的所有数据：<code>SELECT * FROM 表名 WHERE 条件; -- 例：SELECT * FROM student WHERE name=&#39;张三&#39;;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://github.com/lczalh/blog/blob/master/source/images/MySQL/数据类型.png?raw=true&quot; alt=&quot;markdown&quot; title=&quot;数据类型&quot;&gt;&lt;/p&gt;
&lt;h2 id=&quot;1-DD
      
    
    </summary>
    
    
      <category term="MySQL" scheme="http://yoursite.com/tags/MySQL/"/>
    
  </entry>
  
  <entry>
    <title>iOS RxDataSources</title>
    <link href="http://yoursite.com/2019/04/02/2019-4-02%20iOS%E5%BC%80%E5%8F%91%20RxDataSources/"/>
    <id>http://yoursite.com/2019/04/02/2019-4-02 iOS开发 RxDataSources/</id>
    <published>2019-04-02T02:48:47.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<p>RxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装</p><h2 id="1-UITableView"><a href="#1-UITableView" class="headerlink" title="1. UITableView"></a>1. UITableView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxTableViewSectionedAnimatedDataSource</code></p><h2 id="2-UICollectionView"><a href="#2-UICollectionView" class="headerlink" title="2. UICollectionView"></a>2. UICollectionView</h2><p>数据源类型：<code>RxTableViewSectionedReloadDataSource</code>，<code>RxCollectionViewSectionedAnimatedDataSource</code></p><h2 id="3-ModelType"><a href="#3-ModelType" class="headerlink" title="3. ModelType"></a>3. ModelType</h2><p>模型类型：<code>SectionModel</code>，<code>AnimatableSectionModel</code></p><h2 id="4-使用动画数据源，自定义模型需遵守IdentifiableType协议"><a href="#4-使用动画数据源，自定义模型需遵守IdentifiableType协议" class="headerlink" title="4. 使用动画数据源，自定义模型需遵守IdentifiableType协议"></a>4. 使用动画数据源，自定义模型需遵守<code>IdentifiableType</code>协议</h2><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NewsListModel</span>: <span class="title">Object</span>,<span class="title">Mappable</span> </span>&#123;</span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> publishTime: <span class="type">String?</span> <span class="comment">// 发布时间</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> category: <span class="type">String?</span> <span class="comment">// 类型</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> source: <span class="type">String?</span> <span class="comment">// 来源</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> newsId: <span class="type">String?</span> <span class="comment">// 新闻ID</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> title: <span class="type">String?</span> <span class="comment">// 标题</span></span><br><span class="line">    <span class="meta">@objc</span> <span class="keyword">dynamic</span> <span class="keyword">var</span> newsImg: <span class="type">String?</span> <span class="comment">//新闻小图片url</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">required</span> <span class="keyword">convenience</span> <span class="keyword">init</span>?(<span class="built_in">map</span>: <span class="type">Map</span>) &#123;</span><br><span class="line">        <span class="keyword">self</span>.<span class="keyword">init</span>()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">func</span> <span class="title">mapping</span><span class="params">(<span class="built_in">map</span>: Map)</span></span> &#123;</span><br><span class="line">        publishTime   &lt;- <span class="built_in">map</span>[<span class="string">"publishTime"</span>]</span><br><span class="line">        category   &lt;- <span class="built_in">map</span>[<span class="string">"category"</span>]</span><br><span class="line">        source   &lt;- <span class="built_in">map</span>[<span class="string">"source"</span>]</span><br><span class="line">        newsId   &lt;- <span class="built_in">map</span>[<span class="string">"newsId"</span>]</span><br><span class="line">        title   &lt;- <span class="built_in">map</span>[<span class="string">"title"</span>]</span><br><span class="line">        newsImg   &lt;- <span class="built_in">map</span>[<span class="string">"newsImg"</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">extension</span> <span class="title">NewsListModel</span>: <span class="title">IdentifiableType</span> </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> identity: <span class="type">NewsListModel</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">self</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">typealias</span> <span class="type">Identity</span> = <span class="type">NewsListModel</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-Demo"><a href="#5-Demo" class="headerlink" title="5. Demo"></a>5. <a href="https://github.com/lczalh/Diary" target="_blank" rel="noopener">Demo</a></h2>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;RxDataSource 的本质就是使用 RxSwift 对 UITableView 和 UICollectionView 的数据源做了一层包装&lt;/p&gt;
&lt;h2 id=&quot;1-UITableView&quot;&gt;&lt;a href=&quot;#1-UITableView&quot; class=&quot;heade
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Alamofire实时检测网络状态</title>
    <link href="http://yoursite.com/2019/03/28/2019-3-28%20iOS%E5%BC%80%E5%8F%91%20%E5%AE%9E%E6%97%B6%E6%A3%80%E6%B5%8B%E7%BD%91%E7%BB%9C%E7%8A%B6%E6%80%81/"/>
    <id>http://yoursite.com/2019/03/28/2019-3-28 iOS开发 实时检测网络状态/</id>
    <published>2019-03-28T01:43:23.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<p>实时检测网络状态</p><h2 id="1-创建全局NetworkReachabilityManager对象"><a href="#1-创建全局NetworkReachabilityManager对象" class="headerlink" title="1. 创建全局NetworkReachabilityManager对象"></a>1. 创建全局NetworkReachabilityManager对象</h2><figure class="highlight lisp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">let newsHomeNetworkReachabilityManager = NetworkReachabilityManager(<span class="name">host</span>: <span class="string">"http://www.baidu.com"</span>)</span><br></pre></td></tr></table></figure><h2 id="2-开启网络监控"><a href="#2-开启网络监控" class="headerlink" title="2. 开启网络监控"></a>2. 开启网络监控</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span><span class="type">sHomeNetworkReachabilityManager</span>?.startListening()</span><br></pre></td></tr></table></figure><h2 id="3-监听网络变化"><a href="#3-监听网络变化" class="headerlink" title="3. 监听网络变化"></a>3. 监听网络变化</h2><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">newsHomeNetworkReachabilityManager?.listener = &#123; <span class="keyword">state</span> <span class="keyword">in</span></span><br><span class="line">    switch <span class="keyword">state</span> &#123;</span><br><span class="line">        case .<span class="literal">unknown</span>:</span><br><span class="line">            LCZProgressHUD.showError(title: <span class="string">"似乎与网络断开了连接!"</span>)</span><br><span class="line">            break</span><br><span class="line">        case .notReachable:</span><br><span class="line">            LCZProgressHUD.showError(title: <span class="string">"似乎与网络断开了连接!"</span>)</span><br><span class="line">            break</span><br><span class="line">        case .reachable(_):</span><br><span class="line">            break</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-不需要时停止监控"><a href="#4-不需要时停止监控" class="headerlink" title="4. 不需要时停止监控"></a>4. 不需要时停止监控</h2><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span><span class="type">sHomeNetworkReachabilityManager</span>?.stopListening()</span><br></pre></td></tr></table></figure><h2 id="5-其它常用属性"><a href="#5-其它常用属性" class="headerlink" title="5. 其它常用属性"></a>5. 其它常用属性</h2><figure class="highlight kotlin"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> isReachable: Bool <span class="comment">// 当前网络是蜂窝网络或者是WiFi连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> isReachableOnWWAN: Bool <span class="comment">// 当前网络是通过蜂窝网络连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> isReachableOnEthernetOrWiFi: Bool <span class="comment">// 当前网络是通过WiFi网络连接</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">open</span> <span class="keyword">var</span> networkReachabilityStatus: NetworkReachabilityStatus <span class="comment">// 当前网络状态</span></span><br></pre></td></tr></table></figure><h2 id="6-注意事项"><a href="#6-注意事项" class="headerlink" title="6. 注意事项"></a>6. 注意事项</h2><h3 id="6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放"><a href="#6-1-NetworkReachabilityManager不能为局部变量-否则会提前释放" class="headerlink" title="6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放"></a>6.1 NetworkReachabilityManager不能为局部变量,否则会提前释放</h3><h3 id="6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调"><a href="#6-2-每次使用需new一个新的newsHomeNetworkReachabilityManager-否则只响应最后监控回调" class="headerlink" title="6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调"></a>6.2 每次使用需new一个新的newsHomeNetworkReachabilityManager,否则只响应最后监控回调</h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;实时检测网络状态&lt;/p&gt;
&lt;h2 id=&quot;1-创建全局NetworkReachabilityManager对象&quot;&gt;&lt;a href=&quot;#1-创建全局NetworkReachabilityManager对象&quot; class=&quot;headerlink&quot; title=&quot;1. 创建全局N
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS XcodeBuild打包ipa</title>
    <link href="http://yoursite.com/2019/03/04/2019-3-04%20XcodeBuild%E6%89%93%E5%8C%85ipa/"/>
    <id>http://yoursite.com/2019/03/04/2019-3-04 XcodeBuild打包ipa/</id>
    <published>2019-03-04T02:07:13.000Z</published>
    <updated>2019-04-22T08:26:04.329Z</updated>
    
    <content type="html"><![CDATA[<p>XcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作</p><h2 id="1-进入项目的目录"><a href="#1-进入项目的目录" class="headerlink" title="1. 进入项目的目录"></a>1. 进入项目的目录</h2><p><code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code>   /Users/tanitsubukousha/Desktop/GLGL: 为你的项目路径</p><h2 id="2-清除编译过程生成的文件"><a href="#2-清除编译过程生成的文件" class="headerlink" title="2. 清除编译过程生成的文件"></a>2. 清除编译过程生成的文件</h2><p><code>$ xcodebuild clean -$workspace $project_Name.$projectType -scheme $project_Name -configuration $configuration</code><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$workspace</span>:  project / workspace（CocoaPods）</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$project</span>_Name: 项目名称</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$projectType</span>:  xcodeproj / xcworkspace（CocoaPods）</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$configuration</span>:  Debug / Release</span></span><br></pre></td></tr></table></figure></p><p>出现<code>** CLEAN SUCCEEDED **</code> 则清除成功</p><h2 id="3-生成-xcarchive-文件"><a href="#3-生成-xcarchive-文件" class="headerlink" title="3. 生成 .xcarchive 文件"></a>3. 生成 .xcarchive 文件</h2><p><code>$ xcodebuild archive -$workspace $project_Name.$projectType -scheme $project_Name -archivePath ./$project_Name.xcarchive</code><br>执行完后目录下会生成 <code>$project_Name.xcarchive</code> 文件。</p><h2 id="4-配置plist文件"><a href="#4-配置plist文件" class="headerlink" title="4. 配置plist文件"></a>4. 配置plist文件</h2><p>在当前目录下创建一个<code>app-store.plist</code>    appstore: 自定义名称<br>内容如下<br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/app-store.png?raw=true" alt="markdown" title="app-store"><br>4.1关于method内容<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app-store,   <span class="meta">#AppStore正式生产环境包</span></span><br><span class="line">ad-hoc,  <span class="meta">#生产测试包</span></span><br><span class="line">enterprise,  <span class="meta">#企业包</span></span><br><span class="line">development  <span class="meta">#开发测试包</span></span><br></pre></td></tr></table></figure></p><h2 id="5-打包ipa"><a href="#5-打包ipa" class="headerlink" title="5. 打包ipa"></a>5. 打包ipa</h2><p><code>$ xcodebuild -exportArchive -exportOptionsPlist app-store.plist -archivePath ./$project_Name.xcarchive -exportPath ./autoPackage -allowProvisioningUpdates</code><br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">app-store<span class="selector-class">.plist</span> 创建的pislt文件</span><br><span class="line">./autoPackage  ipa存放的路径</span><br></pre></td></tr></table></figure></p><p>打包成功 会在当前目录生成一个<code>autoPackage</code>文件夹<br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/ipa.png?raw=true" alt="markdown" title="ipa"></p><h2 id="6-打包脚本"><a href="#6-打包脚本" class="headerlink" title="6. 打包脚本"></a>6. 打包脚本</h2><p><a href="https://github.com/lczalh/XcodeprojShell" title="XcodeprojShell" target="_blank" rel="noopener">XcodeprojShell</a> </p><p>使用方法：</p><h3 id="6-1-将以下文件放入项目目录"><a href="#6-1-将以下文件放入项目目录" class="headerlink" title="6.1 将以下文件放入项目目录"></a>6.1 将以下文件放入项目目录</h3><p><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-3-04 XcodeBuild打包ipa/脚本.png?raw=true" alt="markdown" title="脚本"></p><h3 id="6-2-进入项目的目录"><a href="#6-2-进入项目的目录" class="headerlink" title="6.2 进入项目的目录"></a>6.2 进入项目的目录</h3><p><code>$ cd 你的项目路径</code></p><h3 id="6-3-运行脚本"><a href="#6-3-运行脚本" class="headerlink" title="6.3 运行脚本"></a>6.3 运行脚本</h3><p><code>$ ./XcodeprojShell.sh</code> 根据提示操作即可</p><h2 id="7-远程打包（-必须每次先获取keychain的访问权限）"><a href="#7-远程打包（-必须每次先获取keychain的访问权限）" class="headerlink" title="7. 远程打包（ 必须每次先获取keychain的访问权限）"></a>7. 远程打包（ 必须每次先获取<code>keychain</code>的访问权限）</h2><p><code>$ security unlock-keychain -p $password /Users/$userName/Library/Keychains/Login.keychain</code><br><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"><span class="meta-keyword">$userName</span> 主机用户名</span></span><br><span class="line"><span class="meta"><span class="meta-keyword">$password</span> 主机密码</span></span><br></pre></td></tr></table></figure></p><h2 id="8-对应用重签名"><a href="#8-对应用重签名" class="headerlink" title="8. 对应用重签名"></a>8. 对应用重签名</h2><h3 id="8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa"><a href="#8-1-将得到的ceshi-ipa-进行解压-unzip-ceshi-ipa" class="headerlink" title="8.1 将得到的ceshi.ipa 进行解压  $ unzip ceshi.ipa"></a>8.1 将得到的ceshi.ipa 进行解压  <code>$ unzip ceshi.ipa</code></h3><h3 id="8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature"><a href="#8-2-删除旧签名-rm-rf-Payload-ceshi-app-CodeSignature" class="headerlink" title="8.2 删除旧签名 $ rm -rf Payload/ceshi.app/_CodeSignature/"></a>8.2 删除旧签名 <code>$ rm -rf Payload/ceshi.app/_CodeSignature/</code></h3><h3 id="8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件"><a href="#8-3-将-codesign-d-entitlements-Payload-XXX-app-命令打印的内容-创建entitlements-plist文件" class="headerlink" title="8.3 将 $ codesign -d --entitlements - Payload/XXX.app 命令打印的内容,创建entitlements.plist文件"></a>8.3 将 <code>$ codesign -d --entitlements - Payload/XXX.app</code> 命令打印的内容,创建entitlements.plist文件</h3><h3 id="8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app"><a href="#8-4-签名-codesign-f-s-quot-iPhone-Distribution-XXX-quot-entitlements-entitlements-plist-Payload-ceshi-app" class="headerlink" title="8.4 签名 codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app"></a>8.4 签名 <code>codesign -f -s &quot;iPhone Distribution: XXX&quot; --entitlements entitlements.plist Payload/ceshi.app</code></h3>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;XcodeBuild是一个命令行工具，可以用来对Xcode工程或工作区进行编译、查找、分析、测试等各种操作&lt;/p&gt;
&lt;h2 id=&quot;1-进入项目的目录&quot;&gt;&lt;a href=&quot;#1-进入项目的目录&quot; class=&quot;headerlink&quot; title=&quot;1. 进入项目的目录&quot;&gt;&lt;
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>iOS Fastlane自动化打包ipa</title>
    <link href="http://yoursite.com/2019/02/28/2019-2-28%20Fastlane%E8%87%AA%E5%8A%A8%E5%8C%96%E6%89%93%E5%8C%85/"/>
    <id>http://yoursite.com/2019/02/28/2019-2-28 Fastlane自动化打包/</id>
    <published>2019-02-28T10:00:41.000Z</published>
    <updated>2019-04-22T08:26:04.328Z</updated>
    
    <content type="html"><![CDATA[<p>Fastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。<a href="https://docs.fastlane.tools/" title="Fastlane文档" target="_blank" rel="noopener">Fastlane文档</a></p><h2 id="1-安装Xcode命令行工具"><a href="#1-安装Xcode命令行工具" class="headerlink" title="1. 安装Xcode命令行工具"></a>1. 安装Xcode命令行工具</h2><p>安装命令: <code>$ xcode-select --install</code><br>提示: <code>xcode-select: error: command line tools are already installed, use &quot;Software Update&quot; to install updates</code>  表示已经安装</p><h2 id="2-安装Fastlane"><a href="#2-安装Fastlane" class="headerlink" title="2. 安装Fastlane"></a>2. 安装Fastlane</h2><p>安装命令: <code>$ sudo gem install fastlane -NV</code> 或 <code>brew cask install fastlane</code><br>检查是否安装成功 <code>fastlane --version</code></p><h2 id="3-初始化Fastlane"><a href="#3-初始化Fastlane" class="headerlink" title="3. 初始化Fastlane"></a>3. 初始化Fastlane</h2><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>初始化Fastlane：<code>$ fastlane init</code><br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/fastlane初始化.png?raw=true" alt="markdown" title="Fastlane初始化"><br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">1. 📸  Automate screenshots (自动化截图)</span><br><span class="line">2. 👩‍✈️  Automate beta distribution <span class="keyword">to</span> TestFlight (自动testfilght型配置)</span><br><span class="line">3. 🚀  Automate App Store distribution (自动发布型配置)</span><br><span class="line">4. 🛠 <span class="built_in"> Manual </span>setup - manually setup your project <span class="keyword">to</span> automate your (需要手动配置内容)</span><br></pre></td></tr></table></figure></p><p>我这里选择 4  等待一下会让你按回车 (共三次)  即安装成功！<br>在项目中会生成 fastlane文件夹、Gemfile、Gemfile.lock<br>fastlane文件夹：Appfile (存储有关开发者账号相关信息)、Fastfile (核心文件，主要用于 命令行调用和处理具体的流程)</p><h2 id="4-文件配置"><a href="#4-文件配置" class="headerlink" title="4. 文件配置"></a>4. 文件配置</h2><h3 id="4-1-打开Appfile文件-修改以下配置"><a href="#4-1-打开Appfile文件-修改以下配置" class="headerlink" title="4.1 打开Appfile文件 修改以下配置"></a>4.1 打开Appfile文件 修改以下配置</h3><p><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Appfile.png?raw=true" alt="markdown" title="Appfile"></p><h3 id="4-2-打开Fastfile文件-修改以下配置"><a href="#4-2-打开Fastfile文件-修改以下配置" class="headerlink" title="4.2 打开Fastfile文件 修改以下配置"></a>4.2 打开Fastfile文件 修改以下配置</h3><p><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/Fastfile.png?raw=true" alt="markdown" title="Fastfile"></p><h3 id="4-3-关于export-method方法"><a href="#4-3-关于export-method方法" class="headerlink" title="4.3 关于export_method方法"></a>4.3 关于export_method方法</h3><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">app-store,   <span class="meta">#AppStore正式生产环境包</span></span><br><span class="line">ad-hoc,  <span class="meta">#生产测试包</span></span><br><span class="line">enterprise,  <span class="meta">#企业包</span></span><br><span class="line">development  <span class="meta">#开发测试包</span></span><br></pre></td></tr></table></figure><h2 id="5-证书管理插件"><a href="#5-证书管理插件" class="headerlink" title="5. 证书管理插件"></a>5. 证书管理插件</h2><p>match是fastlane的一个功能组件, 能自动从苹果官方上下载证书和pp文件同步到我们的git仓库中<br>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>安装命令: <code>$ fastlane match init</code><br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/match.png?raw=true" alt="markdown" title="match"></p><h3 id="5-1-先删除旧证书和pp文件"><a href="#5-1-先删除旧证书和pp文件" class="headerlink" title="5.1 先删除旧证书和pp文件"></a>5.1 先删除旧证书和pp文件</h3><p>分别执行以下命令<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane <span class="keyword">match</span> nuke development</span><br><span class="line">$ fastlane <span class="keyword">match</span> nuke distribution</span><br></pre></td></tr></table></figure></p><h3 id="5-2-生成证书和pp文件"><a href="#5-2-生成证书和pp文件" class="headerlink" title="5.2 生成证书和pp文件"></a>5.2 生成证书和pp文件</h3><p>cd到项目路径：<code>$ cd /Users/tanitsubukousha/Desktop/GLGL</code><br>分别执行以下命令（首次执行时,会要求输入Git仓库密码,用来对证书进行加密,后续其他机器获取证书时使用该密码进行解密）<br><figure class="highlight coq"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ fastlane <span class="keyword">match</span> development</span><br><span class="line">$ fastlane <span class="keyword">match</span> adhoc</span><br><span class="line">$ fastlane <span class="keyword">match</span> appstore</span><br></pre></td></tr></table></figure></p><h2 id="6-打包ipa"><a href="#6-打包ipa" class="headerlink" title="6. 打包ipa"></a>6. 打包ipa</h2><p>打包命: <code>$ fastlane test</code>  test是Fastfile文件中的lane名称<br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/ipa.png?raw=true" alt="markdown" title="ipa"></p><h2 id="7-问题"><a href="#7-问题" class="headerlink" title="7. 问题"></a>7. 问题</h2><h3 id="7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild"><a href="#7-1-Automatic-signing-is-disabled-and-unable-to-generate-a-profile-To-enable-automatic-signing-pass-allowProvisioningUpdates-to-xcodebuild" class="headerlink" title="7.1 Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild."></a>7.1 <code>Automatic signing is disabled and unable to generate a profile. To enable automatic signing, pass -allowProvisioningUpdates to xcodebuild.</code></h3><p>Xcode 9 之后禁止其直接访问钥匙串, 导致持续集成时执行 xcode build 会出现找不到证书或证书配置文件。修改 fastlane 配置文件来解决<br><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-28 Fastlane自动化打包/7.1问题.png?raw=true" alt="markdown" title="7.1问题"><br><code>export_xcargs: &quot;-allowProvisioningUpdates&quot;</code></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Fastlane是一套使用Ruby写的自动化工具集，旨在简化Android和iOS的部署过程，自动化你的工作流。它可以简化一些乏味、单调、重复的工作，像截图、代码签名以及发布App。&lt;a href=&quot;https://docs.fastlane.tools/&quot; title=&quot;
      
    
    </summary>
    
    
      <category term="iOS" scheme="http://yoursite.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>mac OS 搭建Hexo个人博客</title>
    <link href="http://yoursite.com/2019/02/11/2019-2-12%20hexo%E6%90%AD%E5%BB%BA/"/>
    <id>http://yoursite.com/2019/02/11/2019-2-12 hexo搭建/</id>
    <published>2019-02-11T10:00:41.000Z</published>
    <updated>2019-04-22T08:26:04.328Z</updated>
    
    <content type="html"><![CDATA[<p>Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。<a href="https://hexo.io/zh-cn/docs/" title="Hexo文档" target="_blank" rel="noopener">Hexo文档</a></p><h2 id="1-博客效果图"><a href="#1-博客效果图" class="headerlink" title="1. 博客效果图"></a>1. 博客效果图</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/博客效果.png?raw=true" alt="markdown" title="博客效果"></p><h2 id="2-创建GitHub仓库"><a href="#2-创建GitHub仓库" class="headerlink" title="2. 创建GitHub仓库"></a>2. 创建GitHub仓库</h2><p><img src="https://github.com/lczalh/blog/blob/master/source/images/2019-2-11 hexo搭建/创建仓库.png?raw=true" alt="markdown" title="创建仓库"></p><p><strong> Respository name 中的lczalh.github.io 的lczalh 一定与前面的Owner 一致 </strong></p><h2 id="3-安装Node-js"><a href="#3-安装Node-js" class="headerlink" title="3. 安装Node.js"></a>3. 安装Node.js</h2><p><a href="https://nodejs.org/en/" title="Node.js下载" target="_blank" rel="noopener">Node.js下载</a><br>验证是否安装: <code>$ node -v</code></p><h2 id="4-安装Git"><a href="#4-安装Git" class="headerlink" title="4. 安装Git"></a>4. 安装Git</h2><p><code>$ brew install git</code><br>验证是否安装:  <code>$ git --version</code></p><h2 id="5-安装Hexo"><a href="#5-安装Hexo" class="headerlink" title="5. 安装Hexo"></a>5. 安装Hexo</h2><p><code>$ sudo npm install hexo-cli -g</code></p><h2 id="6-创建博客"><a href="#6-创建博客" class="headerlink" title="6. 创建博客"></a>6. 创建博客</h2><p><code>$ hexo init lczalh.github.io</code>                          <code>lczalh.github.io</code>为文件夹名称 可自定义<br>执行成功后，会创建出一个名为 <code>lczalh.github.io</code> 的文件夹</p><p><strong> 基础配置: 打开文件位置 <code>lczalh.github.io/_config.yml</code> </strong><br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">title</span>: lczalh    <span class="comment">// 博客名称</span></span><br><span class="line"><span class="attribute">author</span>: Liu Chao Zheng  <span class="comment">// 你的名字</span></span><br><span class="line"><span class="attribute">language</span>: zh-Hans    <span class="comment">// 中文</span></span><br><span class="line"><span class="attribute">theme</span>: new-vno   <span class="comment">// 主题名称</span></span><br><span class="line"><span class="attribute">deploy</span>:</span><br><span class="line">  <span class="attribute">type</span>: git    <span class="comment">// Git发布</span></span><br><span class="line">  <span class="attribute">repo</span>: <span class="attribute">https</span>:<span class="comment">//github.com/lczalh/lczalh.github.io.git    // 刚才创建的Github仓库</span></span><br></pre></td></tr></table></figure></p><h2 id="7-更改主题"><a href="#7-更改主题" class="headerlink" title="7. 更改主题"></a>7. 更改主题</h2><p>进入上一步创建的文件夹: <code>$ cd lczalh.github.io</code><br>安装主题: <code>$ git clone https://github.com/monniya/hexo-theme-new-vno.git themes/new-vno</code> </p><p><a href="https://github.com/monniya/hexo-theme-new-vno" title="主题配置" target="_blank" rel="noopener">主题配置</a>                     <a href="https://hexo.io/themes/" title="更多主题" target="_blank" rel="noopener">更多主题</a></p><h2 id="8-写博客"><a href="#8-写博客" class="headerlink" title="8. 写博客"></a>8. 写博客</h2><p>博客路径: <code>lczalh.github.io/source/_posts</code> 在这里创建你的第一篇博客 例如创建: <strong> 2019-2-12 hexo搭建.md </strong>  内容如下:<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">layout:</span> <span class="string">post</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">"mac OS 搭建Hexo个人博客"</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2019</span><span class="bullet">-02</span><span class="bullet">-11</span> <span class="number">18</span><span class="string">:00:41</span></span><br><span class="line"><span class="attr">tags:</span> <span class="string">博客</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="string">Hexo</span> <span class="string">是一个快速、简洁且高效的博客框架。Hexo</span> <span class="string">使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可</span><span class="string">利用靓丽的主题生成静态网页。[Hexo文档](https://hexo.io/zh-cn/docs/</span> <span class="string">"Hexo文档"</span><span class="string">)</span></span><br></pre></td></tr></table></figure></p><h2 id="9-测试是否正常"><a href="#9-测试是否正常" class="headerlink" title="9. 测试是否正常"></a>9. 测试是否正常</h2><p>启动测试服务: <code>$ hexo s</code>  在浏览器中输入<a href="在浏览器中输入https://localhost:4000 访问">https://localhost:4000</a> 访问</p><h2 id="10-安装自动部署发布工具"><a href="#10-安装自动部署发布工具" class="headerlink" title="10. 安装自动部署发布工具"></a>10. 安装自动部署发布工具</h2><p><code>$ sudo npm install hexo-deployer-git --save</code></p><h2 id="11-发布博客"><a href="#11-发布博客" class="headerlink" title="11. 发布博客"></a>11. 发布博客</h2><p>切换到root用户(有权限，跳过此行): <code>$ sudo -s</code><br>发布博客: <code>$ hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</code></p><p><strong> 每次写完博客，执行下这两个命令就可以了 </strong></p><h2 id="12-错误"><a href="#12-错误" class="headerlink" title="12. 错误"></a>12. 错误</h2><p><strong> 1.WARN No layout: index.html </strong><br>解决方案: 安装/更新主题<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="keyword">cd</span> lczalh.github.io</span><br><span class="line">$ git clone http<span class="variable">s:</span>//github.<span class="keyword">com</span>/monniya/hexo-theme-<span class="keyword">new</span>-vno.git themes/<span class="keyword">new</span>-vno</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;Hexo 是一个快速、简洁且高效的博客框架。Hexo 使用Markdown（或其他渲染引擎）解析文章，在几秒内，即可利用靓丽的主题生成静态网页。&lt;a href=&quot;https://hexo.io/zh-cn/docs/&quot; title=&quot;Hexo文档&quot; target=&quot;_bla
      
    
    </summary>
    
    
      <category term="Hexo" scheme="http://yoursite.com/tags/Hexo/"/>
    
  </entry>
  
</feed>
